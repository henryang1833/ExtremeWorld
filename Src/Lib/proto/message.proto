 syntax = "proto3";

package SkillBridge.Message;

option csharp_namespace = "SkillBridge.Message";
option cc_enable_arenas = true;

////////////////////////////////////////////////////////////////
//
//  Basic Defines
//
////////////////////////////////////////////////////////////////
enum RESULT
{
	SUCCESS = 0;
	FAILED = 1;
}

enum CHARACTER_TYPE
{
	Player = 0;
	NPC = 1;
	Monster = 2;
}

enum CHARACTER_CLASS
{
	NONE = 0;
	WARRIOR = 1;
	WIZARD = 2;
	ARCHER = 3;
}

enum CHARACTER_STATE
{
	IDLE = 0;
	MOVE = 1;
}

enum ENTITY_EVENT
{
	NONE = 0;
	IDLE = 1;
	MOVE_FWD = 2;
	MOVE_BACK = 3;
	JUMP = 4;
	RIDE = 5;
}

enum ITEM_TYPE
{
	NORMAL = 0;
	MATERIAL = 1;
	TASK = 2;
	EQUIP = 3;
	RIDE = 4;
}

enum EQUIP_SLOT
{
	WEAPON = 0;
	ACCESSORY = 1;
	HELMET = 2; //头盔
	CHEST = 3; //胸甲
	SHOULDER = 4; //护肩
	PANTS = 5; //裤子
	BOOTS = 6; //靴子
	SLOT_MAX = 7;
}

enum STATUS_ACTION
{
	UPDATE = 0;
	ADD = 1;
	DELETE = 2;
}

enum STATUS_TYPE
{
	MONEY = 0;
	EXP = 1;
	SKILL_POINT = 2;
	ITEM = 3;
}

message NStatus
{
	STATUS_TYPE type = 1;
	STATUS_ACTION action = 2;
	int32 id = 3;
	int32 value = 4;
}

message StatusNotify
{
	repeated NStatus status = 1;
}

message NUserInfo {
	int32 id = 1;
	NPlayerInfo playerInfo = 2;
}

message NPlayerInfo {
	int32 id = 1;
	repeated NCharacterInfo characterInfos = 2;
}

message NCharacterInfo 
{
	int32 id = 1;
	int32 configId = 2;
	int32 entityId = 3;
	string name = 4;
	CHARACTER_TYPE type = 5;
	CHARACTER_CLASS class = 6;
	int32 level = 7;
	int32 mapId = 8;
	NEntity entity = 9;
	int64 gold = 10;
	repeated NItemInfo itemInfos = 11;
	NBagInfo bagInfo = 12;
	bytes equips = 13;
	repeated NQuestInfo questInfos = 14;
	repeated NFriendInfo friendInfos = 15;
	NGuildInfo guildInfo = 16;
	int32 ride = 17;
}

message NBagInfo
{
	int32 unlocked = 1;
	bytes items = 2;
}
message NItemInfo
{
	int32 id = 1;
	int32 count = 2;
}
message NVector3
{
	int32 x = 1;
	int32 y = 2;
	int32 z = 3;
}

////////////////////////////////////////////////////////////////
//
//  Entities
//
////////////////////////////////////////////////////////////////


message NEntity {
	int32 id = 1;
	NVector3 position = 2;
	NVector3 direction = 3;
	int32 speed = 4;
}

message NEntitySync {
	int32 id = 1;
	ENTITY_EVENT event = 2;
	NEntity entity = 3;
	int32 param = 4;
}



////////////////////////////////////////////////////////////////
//
//  Messages
//
////////////////////////////////////////////////////////////////

message NetMessage{
	NetMessageRequest request = 1;
	NetMessageResponse response = 2;
}

message NetMessageRequest{
	UserRegisterRequest userRegisterReq = 1;
	UserLoginRequest userLoginReq = 2;
	UserCreateCharacterRequest createCharReq = 3;
	UserGameEnterRequest gameEnterReq = 4;
	UserGameLeaveRequest gameLeaveReq = 5;
	
	MapCharacterEnterRequest mapCharacterEnterReq = 6;

	MapEntitySyncRequest mapEntitySyncReq = 8;
	MapTeleportRequest mapTeleportReq = 9;

	ItemBuyRequest itemBuyReq = 10;
	ItemEquipRequest itemEquipReq = 11;

	QuestListRequest questListReq = 12;
	QuestAcceptRequest questAcceptReq = 13;
	QuestSubmitRequest questSubmitReq = 14;

	FriendAddRequest friendAddReq = 15;
	FriendAddResponse friendAddRes = 16;
	FriendListRequest friendListReq = 17;
	FriendRemoveRequest friendRemoveReq = 18;

	TeamInviteRequest teamInviteReq = 19;
	TeamInviteResponse teamInviteRes = 20;
	TeamInfoRequest teamInfoReq = 21;
	TeamLeaveRequest teamLeaveReq = 22;

	GuildCreateRequest guildCreateReq = 23;
	GuildJoinRequest guildJoinReq = 24;
	GuildJoinResponse guildJoinRes = 25;
	GuildRequest guildReq = 26;
	GuildLeaveRequest guildLeaveReq = 27;
	GuildListRequest guildListReq = 28;

	BagSaveRequest bagSaveReq = 29;

}

message BagSaveRequest
{
	NBagInfo bagInfo = 1;
}

message BagSaveResponse
{
	RESULT result = 1;
	string errorMsg = 2;
}

message ItemEquipRequest
{
	int32 slot = 1;
	int32 itemId = 2;
	bool isEquip = 3;
}

message ItemEquipResponse
{
	RESULT result = 1;
	string errorMsg = 2;
}

message NetMessageResponse{
	UserRegisterResponse userRegisterRes = 1;
	UserLoginResponse userLoginRes = 2;
	UserCreateCharacterResponse createCharRes = 3;
	UserGameEnterResponse gameEnterRes = 4;
	UserGameLeaveResponse gameLeaveRes = 5;

	MapCharacterEnterResponse mapCharacterEnterRes = 6;
	MapCharacterLeaveResponse mapCharacterLeaveRes = 7;

	MapEntitySyncResponse mapEntitySyncRes = 8;
	
	ItemBuyResponse itemBuyRes = 10;
	ItemEquipResponse itemEquipRes = 11;
	QuestListResponse questListRes = 12;
	QuestAcceptResponse questAcceptRes = 13;
	QuestSubmitResponse questSubmitRes = 14;
	FriendAddRequest friendAddReq = 15;
	FriendAddResponse friendAddRes = 16;
	FriendListResponse friendListRes = 17;
	FriendRemoveResponse friendRemoveRes = 18;

	TeamInviteRequest teamInviteReq = 19;
	TeamInviteResponse teamInviteRes = 20;
	TeamInfoResponse teamInfoRes = 21;
	TeamLeaveResponse teamLeaveRes = 22;

	GuildCreateResponse guildCreateRes = 23;
	GuildJoinRequest guildJoinReq = 24;
	GuildJoinResponse guildJoinRes = 25;
	GuildResponse guildRes = 26;
	GuildLeaveResponse guildLeaveRes = 27;
	GuildListResponse guildListRes = 28;
	
	BagSaveResponse bagSaveRes = 29;
	StatusNotify statusNotify = 100;

}

message ItemBuyRequest{
	int32 shopId = 1;
	int32 shopItemId = 2;
}

message ItemBuyResponse{
	RESULT result = 1;
	string errorMsg = 2;
}


// User Protocol
message UserLoginRequest {
	string user = 1;
	string passward = 2;
}

message UserLoginResponse {
	RESULT result = 1;
	string errorMsg = 2;
	NUserInfo userinfo = 3;
}


message UserRegisterRequest
{
	string user = 1;
	string passward = 2;
}

message UserRegisterResponse {
	RESULT result = 1;
	string errorMsg = 2;
}

message UserCreateCharacterRequest
{
	string name = 1;
	CHARACTER_CLASS class = 2;
}

message UserCreateCharacterResponse {
	RESULT result = 1;
	string errorMsg = 2;
	repeated NCharacterInfo characterInfos = 3;
}

message UserGameEnterRequest
{
	int32 characterIdx = 1;
}

message UserGameEnterResponse {
	RESULT result = 1;
	string errorMsg = 2;
	NCharacterInfo characterInfo = 3;
}

message UserGameLeaveRequest
{
}

message UserGameLeaveResponse {
	RESULT result = 1;
	string errorMsg = 2;
}

// Map Protocol
message MapCharacterEnterRequest
{
	int32 mapId = 1;
}

message MapCharacterEnterResponse
{
	int32 mapId = 1;
	repeated NCharacterInfo characterInfos = 2;
}

message MapCharacterLeaveResponse
{
	int32 entityId = 1;
}


message MapEntitySyncRequest
{
    NEntitySync entitySync = 1;
}


message MapEntitySyncResponse
{
    repeated NEntitySync entitySyncs = 2;
}

message MapTeleportRequest
{
	int32 teleporterId = 1;
}

//Quest System
enum QUEST_STATUS
{
	IN_PROGRESS = 0;
	COMPLETED = 1; //已完成未提交
	FINISHED = 2; //已完成已提交
	FAILED = 3; 
}

enum QUEST_LIST_TYPE{
	ALL = 0;
	IN_PROGRESS = 1;
	FINISHED = 2;
}

message NQuestInfo{
	int32 questId = 1;
	int32 questGuid = 2;
	QUEST_STATUS status = 3;
	repeated int32 targets = 4;
}

message QuestListRequest{
	QUEST_LIST_TYPE listType = 1;
}

message QuestListResponse{
	RESULT 	result = 1;
	string errorMsg = 2;
	repeated NQuestInfo quests = 3;
} 

message QuestAcceptRequest{
	int32 questId = 1;
}

message QuestAcceptResponse{
	RESULT result = 1;
	string errorMsg = 2;
	NQuestInfo quest = 3;
}

message QuestSubmitRequest{
	int32 questId = 1;
}

message QuestSubmitResponse{
	RESULT result = 1;
	string errorMsg =2;
	NQuestInfo quest = 3;
}

message QuestAbandonRequest{
	int32 questId = 1;
}

message QuestAbandonResponse{
	RESULT result = 1;
	string errorMsg =2;
}

//Friend System

message NFriendInfo{
	int32 id = 1;
	NCharacterInfo characterInfo = 2;
	int32 status = 3;
}

message FriendAddRequest{
	int32 fromId = 1;
	string fromName =2;
	int32 toId = 3;
	string toName = 4;
}

message FriendAddResponse{
	RESULT result = 1;
	string errorMsg = 2;
	FriendAddRequest friendAddReq = 3;
}

message FriendListRequest{

}

message FriendListResponse{
	RESULT result = 1;
	string errorMsg = 2;
	repeated NFriendInfo friendInfos = 3;
}

message FriendRemoveRequest{
	int32 id = 1;
	int32 friendId = 2;
}

message FriendRemoveResponse{
	RESULT result = 1;
	string errorMsg = 2;
	int32 id = 3;
}

//Team System

message NTeamInfo{
	int32 id = 1;
	int32 leader = 2;
	repeated NCharacterInfo characterInfos = 3;
}

message TeamInviteRequest{
	int32 teamId = 1;
	int32 fromId = 2;
	string fromName =3;
	int32 toId = 4;
	string toName = 5;
}

message TeamInviteResponse{
	RESULT result = 1;
	string errorMsg = 2;
	TeamInviteRequest teamInviteReq = 3;
}

message TeamInfoRequest{

}

message TeamInfoResponse{
	RESULT result = 1;
	string errorMsg = 2;
	NTeamInfo teamInfo = 3;
}

message TeamLeaveRequest{
	int32 team_id = 1;
	int32 characterId = 2;
}

message TeamLeaveResponse{
	RESULT result = 1;
	string errorMsg = 2;
	int32 characterId = 3;
}

//Guild System

enum GUILD_TITLE{
	NONE = 0;
	PRESIDENT = 1;
	VICE_PRESIDENT = 2;
}

enum APPLY_RESULT{
	NONE = 0;	//还未处理
	ACCEPT = 1;	//接受
	REJECT = 2;	//拒绝
}

message NGuildInfo{
	int32 id = 1;	//公会ID
	string guildName = 2;	//公会名称
	int32 leaderId = 3;	//会长ID
	string leaderName = 4;	//会长名称
	string notice = 5;	//公会宗旨
	int32 memberCount = 6;	//成员数量
	repeated NGuildMemberInfo guildMemberInfos = 7;	//成员列表
	repeated NGuildApplyInfo guildApplyInfos = 8;	//申请加入信息
	int64 createTime = 9;	//	创建时间
}

message NGuildMemberInfo{
	int32 id = 1;	
	int32 characterId = 2;	//角色ID
	GUILD_TITLE title = 3;	//职位
	NCharacterInfo characterInfos = 4;	//角色信息
	int64 joinTime = 5;	//加入时间
	int64 lastTime = 6;	//上次在线时间
	int32 status = 7;	//在线状态
}

//公会申请加入信息
message NGuildApplyInfo{
	int32 guildId = 1;	//申请的公会ID
	int32 characterId = 2;	//申请者ID
	string name = 3;	//申请者名称
	int32 class = 4;	//申请者职业
	int32 level = 5;	//申请者等级
	APPLY_RESULT result  = 6;	//申请结果
}

//创建公会请求
message GuildCreateRequest{
	string guildName = 1;
	string guildNotice = 2;
}

//创建公会响应
message GuildCreateResponse{
	RESULT result = 1;
	string errorMsg = 2;
	NGuildInfo guildInfo = 3;
}

//加入公会请求
message GuildJoinRequest{
	NGuildApplyInfo guildApplyInfo = 1;
}

//加入公会响应
message GuildJoinResponse{
	RESULT result = 1;
	string errorMsg = 2;
	NGuildApplyInfo guildApplyInfo = 3;
}

//公会列表请求
message GuildListRequest{

}

//公会列表响应
message GuildListResponse{
	RESULT result = 1;
	string errorMsg = 2;
	repeated NGuildInfo guildInfos = 3;
}

//单个公会信息请求
message GuildRequest{

}

//单个公会信息响应
message GuildResponse{
	 RESULT result = 1;
	 string errorMsg = 2;
	 NGuildInfo guildInfo = 3;
}

//离开公会请求
message GuildLeaveRequest{

}

//离开公会响应
message GuildLeaveResponse{
	RESULT result = 1;
	string errorMsg = 2;
}
